# ex1r.onesample {.unnumbered}

<style>
div.blue pre { background-color:lightblue; }
div.blue pre.r { background-color:lightgrey; }

.nav-tabs > li.active:nth-child(1) > a {
  background-color: ##964B00;
}

.nav-tabs > li > a {
  background-color: ##FFFF00;
  color: blue;
}

main-container {
   max-width: unset;
}
.descriptives {
   overflow: auto; /*do not use `resize`*/
}

.tableby {
   overflow: auto;
}

.descriptives {
   overflow: auto;
   resize: both;
}

table, th, td {
  padding-top: 0px !important;
  padding-bottom: 0px !important;
  vertical-align: middle;
}
</style>

## Linear Mixed Model with a Random-Intercept (LMM:ri)
<p>
The **`LMM:ri`** is similar to traditional (fixed-effect) linear regression extending on this approach by including a subject-specific random-effect that allows each participant to have their own unique intercept value, in addition to the overall mean-level (fixed-effect) intercept value

In this example, we will use the **`LMM:ri`** to analyze trajectories of scores on the externalizing subscale of the child behavior checklist (CBCL) obtained across three measurement occasions in a sample of youth taking part in the ABCD Study. Our primary aim is to characterize stability and change in CBCL externalizing scores across assessments, while accounting for observations that are clustered within youth over time. To do so, we will use the **`LMM:ri`** to simultaneously model an overall sample mean trajectory (fixed effect) and subject-specific (random) effects that vary randomly about the sample mean trajectory. 
</p>

## Preliminary Setup
::: {.panel-tabset}
### Load Libraries {.tabset .tabset-fade .tabset-pills}
example-text before code block
<div class = "blue">
```{r pckg-install}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

## Install necessary packages (if not already installed)
if (!("lme4" %in% installed.packages())) install.packages("lme4")
if (!("lmerTest" %in% installed.packages())) install.packages("lmerTest")
if (!("tidyverse" %in% installed.packages())) install.packages("tidyverse")
if (!("arrow" %in% installed.packages())) install.packages("arrow")
if (!("afex" %in% installed.packages())) install.packages("afex")
if (!("janitor" %in% installed.packages())) install.packages("janitor")
if (!("skimr" %in% installed.packages())) install.packages("skimr")
if (!("sdamr" %in% installed.packages())) install.packages("sdamr")
if (!("formatR" %in% installed.packages())) install.packages("formatR")
if (!("report" %in% installed.packages())) install.packages("report")
if (!("easystats" %in% installed.packages())) install.packages("easystats")
if (!("emmeans" %in% installed.packages())) install.packages("emmeans")
if (!("poorman" %in% installed.packages())) install.packages("poorman")
if (!("parameters" %in% installed.packages())) install.packages("parameters")
if (!("modelbased" %in% installed.packages())) install.packages("modelbased")
if (!("DT" %in% installed.packages())) install.packages("DT")
if (!("data.table" %in% installed.packages())) install.packages("data.table")
if (!("arsenal" %in% installed.packages())) install.packages("arsenal")
if (!("kableExtra" %in% installed.packages())) install.packages("kableExtra")
if (!("equatiomatic" %in% installed.packages())) install.packages("equatiomatic")
if (!("gtsummary" %in% installed.packages())) install.packages("gtsummary")
if (!("ggpubr" %in% installed.packages())) install.packages("ggpubr")
```
</div>
example-text after code block

### Load Packages
<div class = "blue">
```{r pckg-load}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE
#| class.source: fold-hide

## Load packages
library(lme4)
library(lmerTest)
library(tidyverse)
library(arrow)
library(afex)
library(janitor)
library(skimr)
library(sdamr)
library(formatR)
library(report)
library(easystats)
library(emmeans)
library(poorman)
library(parameters)
library(modelbased)
library(DT)
library(data.table)
library(arsenal)
library(kableExtra)
library(equatiomatic)
library(gtsummary)
library(ggpubr)
```
</div>

### Config Options
<div class = "blue">
```{r config}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

knitr::opts_chunk$set(echo = T, message=F, warning=F, error=F, 
                        comment=NA, cache=T, code_folding=T,
                        R.options=list(width=220), fig.align='center', 
                        out.width='75%', fig.asp=.75)
```
</div>
:::

## Descriptives Overview
::: {.panel-tabset}
### Read Data {.tabset .tabset-fade .tabset-pills}
<div class = "blue">
```{r read-data}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

df_long<- read_csv("/Users/shawes/Desktop/df_long.csv")
df_long_sub<- read_csv("/Users/shawes/Desktop/df_long_sub.csv")
df_wide <- read_csv("/Users/shawes/Desktop/df_wide.csv")

```
</div>

### Data Table
<div class = "blue">
```{r data-table}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

## Create a viewable 'datatable' of the primary dataframe (df)

datatable(head(df_long, 50, rownames = FALSE),extensions = 'AutoFill','ColReorder', options = list(autoFill = TRUE,colReorder = TRUE,
  columnDefs = list(list(className = 'dt-center', targets = 10)),
  order = list(list(3, 'asc'), list(4, 'desc')),
  pageLength = 10,
  lengthMenu = c(10, 15, 20),
  initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#808080', 'color': '#fff'});",
    "}")
))

## Not run: 
# Specify table size by pixels
#kable(cbind(df_long, df_long), "html") %>%
#    kable_styling() %>%
#    scroll_box(width = "100%", height = "500px")
```
</div>

### Descriptives 1r
<div class = "blue">

## Diagnostics
```{r}
#| class.source: 'fold-hide'
#| message: FALSE
#| warning: FALSE
#echo: FALSE

#Summary statistics
#summary<-df_long %>%
#group_by(event) %>%
#get_summary_stats(cbcl_extern, type = "mean_sd")
#data.frame(summary)

# Outlier detection
#outlier<-df_long %>%
#group_by(event) %>%
#identify_outliers(cbcl_extern)
#data.frame(outlier)

# Normality Checking
# normality<-df_long %>%
# group_by(event) %>%
# shapiro_test(df_long$cbcl_extern[0:5000])
# data.frame(normality)
```
</div>

### Descriptives 1
<div class = "blue">
```{r descriptives}
#| messages: FALSE
#| echo: TRUE
#| warning: FALSE
#| results: "asis"

## Create a descriptives table of study variables by measurement occasion 
descriptives_1  <- tableby.control(test=FALSE, total=FALSE,
                               numeric.test="kwt", cat.test="chisq",
                               numeric.stats=c("N", "meansd", "median", "range" 
                                               ), #"Nmiss2"
                               cat.stats=c("countpct"), #"Nmiss2"
                               stats.labels=list(N='Count', meansd="Mean (SD)", median
                                                 ='Median', range='Min - Max'
                                                 )) #, Nmiss2 ='Missing'

my_cont_labels <- list(
  Age = "Age",
  Weekly_Gaming_Hours = "Weekly # of Video Gaming Hrs",
  Externalizing = "CBCL Externalizing Scale"
)

tab_descriptives_1 <- tableby(Event ~ Age + Weekly_Gaming_Hours + 
                            Externalizing,
                            data=df_long, control=descriptives_1)

#summary(tab_descriptives_1, labelTranslations = my_cont_labels , text=TRUE, title = #"Continuous Outcomes", term.name = TRUE)

# Push table object through kable and kable_styling
tab_descriptives_1 %>%
  summary(text=TRUE, digits.pct=1, digits=1) %>%
  kable(caption = "Continuous Outcomes") %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE, html_font = "Cambria",
                font_size = 15,
                position = "center", fixed_thead = T) %>%
  row_spec(2:3,  bold = F, extra_css = 'vertical-align: middle !important;') %>%
  column_spec(1, width = "20em", background = "light grey", bold = T, border_right = T) %>%
  column_spec(2, width = "20em", border_right = T) %>%
  column_spec(3, width = "20em", border_right = T) %>%
  footnote(general = "Here is a general comments of the table. ") %>%
  scroll_box(width = "75%", height = "500px")
```
</div>

<div class = "blue">
```{r catvar-table}
#| messages: FALSE
#| warning: FALSE
#| results: "asis"

## Create a descriptives table of study variables by measurement occasion 
descriptives_2  <- tableby.control(test=FALSE, total=FALSE,
                               numeric.test="kwt", cat.test="chisq",
                               numeric.stats=c("N", "meansd", "median", "range"
                                               ), # "Nmiss2"
                               cat.stats=c("countpct"), # "Nmiss2"
                               stats.labels=list(N='Count', meansd="Mean (SD)", median
                                                 ='Median', range='Min - Max'
                                                 )) # , Nmiss2 ='Missing'

my_cat_labels  <- list(
  Event = "Year",
  Sex = "Sex",
  MatureVideoGames = "Mature Video Games",
  DBD = "DBD"
  )

tab_descriptives_2 <- tableby(Event ~ Sex + MatureVideoGames + DBD, 
                            data=df_long, control=descriptives_2)

#summary(tab_descriptives_2, labelTranslations = my_cat_labels , text=TRUE, title = #"Categorical Outcomes", term.name = TRUE)

# Push table object through kable and kable_styling
tab_descriptives_2 %>%
  summary(text=TRUE, digits.pct=1, digits=1) %>%
  kable(caption = "Categorical Outcomes") %>%
  kable_styling(bootstrap_options = "striped", full_width = FALSE, font_size = 15,
                position = "center", fixed_thead = T) %>%
  row_spec(2:3,  bold = F, extra_css = 'vertical-align: middle !important;') %>%
  column_spec(1, width = "20em", background = "light grey", bold = T, border_right = T) %>%
  column_spec(2, width = "20em", border_right = T) %>%
  #column_spec(3, width = "20em", border_right = T) %>%
  footnote(general = "Here is a general comments of the table. ") %>%
  scroll_box(width = "75%", height = "500px")

```
</div>

### Descriptives 2
<div class = "blue">
```{r}
#|  warning: FALSE
#|  messages: FALSE

df_long <- read_csv("/Users/shawes/Desktop/df_long.csv")
df_wide <- read_csv("/Users/shawes/Desktop/df_wide.csv")
# str(df_long)
# hist(df_long$Weekly_Gaming_Hour)
# Compute difference score based on CBCL Externalizing subscale scores at baseline (t1) and 1-Year Follow-up (t2)
df_wide$diffscore <- df_wide$Externalizing_T1 - df_wide$Externalizing_T0

# Compute statistical summaries for the difference score variable
summary(df_wide$diffscore)

# Scatterplot to visualize relationship between t1 & t2 data used to create difference score
scatterplot <- ggplot(df_wide, aes(x = Externalizing_T0, y = Externalizing_T1)) +
    geom_point(size = 3) +
    geom_smooth(method = lm, se = F) +
    xlab("CBCL Externalizing (x) Baseline") +
    ylab("CBCL Externalizing (x) 1-Year Follow-up")

suppressWarnings(print(scatterplot))
```
</div>
:::

### Results
<div class = "blue"> 
::: {.panel-tabset}
### Build Model {.tabset .tabset-fade .tabset-pills}
<div class = "blue">
```{r build-model}
#| class.source: 'fold-hide'
#| message: FALSE
#| warning: FALSE
#| echo: TRUE

# The objective is to identify any significant difference between time points exist or not.

# perform the 1-factor repeated measures anova
# the notation for specification of the error is not intrinsically
# obvious. some reading in R and S model specification is required.
# always best to use "sum to zero" contrasts for ANOVA

#fitplot <- aov(cbcl_extern~event + Error(event), data=df_long)
#summary(fitplot)

#contrasts(df_long$event) <- contr.sum
#fitplot <- aov(cbcl_extern ~ event + Error(event),data=df_long)
#summary(fitplot)

#report the means of each level
#print(model.tables(fitplot,"means"),digits=3)

# report deviation effects for each level
#print(model.tables(fitplot,"effects", n=TRUE),digits=3)

#str(fit.1)
#qqPlot(resid(fitplot[[3]]),id=FALSE)

#hist(fit.1[[3]]$residuals)

```
</div>

> The code snippet above tells R to run a linear mixed model using lmer
> from the lme4 library. The left side of the "\~" symbol specifies the
> dependent variable; the right side specifies days as the independent
> variable(s). The code (1 \| Subject) specifies a random intercept for
> each subject.

### ogdiffscoresection
<div class = "blue">
zzz

```{r}
#| warning: FALSE
#| messages: FALSE

# One-sample t-test to determine whether the average difference score is significantly different than 0.
result <- t.test(df_wide$diffscore, mu = 0, alternative = "two.sided")
# Print the results
#result

# boxplot
#library(ggpubr)
#diffscore_boxplot <- ggboxplot(df_wide$diffscore,
    #ylab = "Externalizing Difference Score", xlab = #FALSE,
    #ggtheme = theme_minimal()
#)

#suppressWarnings(print(diffscore_boxplot))

# Shapiro-Wilk test and normality (Q-Q) plot (visualization of correlation between a given sample and the normal distribution)
#shapiro.test(df_wide$diffscore[0:5000])

#library("ggpubr")
#qqplot <- ggqqplot(df_wide$diffscore,
#    ylab = "Externalizing Difference Score", xlab = #FALSE,
#    ggtheme = theme_minimal()
#)

#suppressWarnings(print(qqplot))
```
</div>

### Model Outputs
<div class = "blue">
```{r model-output}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE
#| code-summary: testing

## Output and reports extending from the LMM-ri analyses
summary(random_intercepts)
confint(random_intercepts, level = 0.95, method = "Wald")
report(random_intercepts)
report_performance(random_intercepts)
report_statistics(random_intercepts)
random <- estimate_grouplevel(random_intercepts)
```
</div>

### Plots/Tables
<div class = "blue">
```{r mod-report}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE


```
zzsss
</div>
:::

### Text
<div class = "blue"> 
::: {.panel-tabset}
### Interpretation {.tabset .tabset-fade .tabset-pills}
<div class = "blue">
```{r interpretation}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

# safsafd

```

The estimated correlation between x and y was "r cor(x,y)`.
There are "r nrow(my_data)` individuals.

From the fixed effects section of the model summary, we can conclude
that there is strong evidence that RT increased significantly over time
(i.e., \# of years). On average for each additional year, RT increased
by 10.46 (b = 10.46, SE = 0.80, p \< .001).We are 95% confident that the
average increase was between 8.89 and 12.04.

In the above, we estimate that the average intercept across all
participants is 251.4. Results from the random effects section below
show that the variance of the intercept for Subject is 1378.2. Taking
the square root, the standard deviation of the intercept is thus 37.1.

We can calculate the 95% coverage interval as 251.4 ± 1.96\*37.1. The
lower bound of the 95% coverage interval is thus 178.7 and the upper
bound is 324.1. We therefore estimated that 95% of the participants have
an intercept between 178.7 and 324.1. This means that 95% of the
participants have a reaction time between 178.7 and 324.1 at Day 0. This
is not to be confused with the 95% confidence interval of the intercept.
The 95% confidence interval is (232.3, 270.5), and this indicates that
we are 95% confident that the average intercept is somewhere between
232.3 and 270.5.

In this model, we have accounted for the repeated measures design
(observations nested within individuals) by including a random intercept
for each participants. Each individual has his/her own intercept. The
effect of time(Year) on RT is assumed to be the same across individuals.
This assumption can be relaxed by fitting a random slope model.
</div>

### Write-up
<div class = "blue">
```{r write-up}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

## sfsfafsac

```

A random slope model is used to test if sleep deprivation affects
reaction time. To account for the repeated measures design, a random
intercept was specified for participants. The random slope for days of
sleep deprivation was included in the model to allow the effect of sleep
deprivation to vary across participants. Results are shown in Table 1.
Using a significant level of 0.05, results indicate that sleep
deprivation significantly increased reaction time. On average, each
additional day of sleep deprivation increased reaction time by 10.47ms
(b = 10.47, 95% CI = \[7.44, 13.50\], p \< .001). Model fit comparison
between model with and without random slope for sleep deprivation shows
that the effect of sleep deprivation varied across participants, χ2(2)=
42.14, p \< .001. The 95% coverage interval for the random slope of
sleep deprivation is (-1.14, 22.07), indicating that the effect of sleep
deprivation was between -1.14 and 22.07 for 95% of the participants.

</div>

:::